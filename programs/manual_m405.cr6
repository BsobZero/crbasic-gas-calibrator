' Program to assess calibration of 2B Technologies Model 405 nm instrument
'
' Patrick O'Keeffe (c) 2017
' Laboratory for Atmospheric Research
' Washington State University

'HINT: per SOP, set analyzer to fast (20s) data output
Const SCAN_INTV = 20 'sec 

Const TWOB_405_COM = ComU3 '& U6
Const TWOB_405_BAUD = 19200
Const TWOB_405_FMT = 3 '8/n/1
Const TWOB_405_REC = 128
Const TWOB_405_BUFF = 1+2*TWOB_405_REC

Dim run_conc(6)
Alias run_conc(1) = run_conc_no2
Alias run_conc(2) = run_tolr_no2
Alias run_conc(3) = run_conc_no
Alias run_conc(4) = run_tolr_no
Alias run_conc(5) = run_conc_nox
Alias run_conc(6) = run_tolr_nox
Units run_conc = ppb

Dim run_finished As Boolean
Dim is_running As Boolean
Dim status As String * 16
Dim run_cylref As String * 32
Dim run_notes As String * 64

Public run_mode_ON As Boolean
Public ref_conc(6)
Alias ref_conc(1) = ref_conc_no2
Alias ref_conc(2) = ref_tolr_no2
Alias ref_conc(3) = ref_conc_no
Alias ref_conc(4) = ref_tolr_no
Alias ref_conc(5) = ref_conc_nox
Alias ref_conc(6) = ref_tolr_nox
Units ref_conc = ppb
Public cylref As String * 32
Public notes As String * 64
Public duration
Units duration = sec

Dim disable_m405 As Boolean
Dim twob_record As String * TWOB_405_REC
Public twob_405nm(22)
Alias twob_405nm(1)  = m405_NO2
Alias twob_405nm(2)  = m405_NO
Alias twob_405nm(3)  = m405_NOx
Alias twob_405nm(4)  = m405_NO2_zero
Alias twob_405nm(5)  = m405_NO_zero
Alias twob_405nm(6)  = m405_flow_factor
Alias twob_405nm(7)  = m405_cell_T
Alias twob_405nm(8)  = m405_cell_P
Alias twob_405nm(9)  = m405_overflow_F
Alias twob_405nm(10) = m405_cell_F
Alias twob_405nm(11) = m405_O3_F
Alias twob_405nm(12) = m405_samp_LED_V
Alias twob_405nm(13) = m405_ref_LED_V
Alias twob_405nm(14) = m405_NO_gen_V
Alias twob_405nm(15) = m405_scrubber_T
'16: date, day of month    '19: time, hour
'17: date, month           '20: time, minutes
'18: date, short year      '21: time, seconds
Alias twob_405nm(22) = m405_status
Units m405_NO2 = ppb
Units m405_NO = ppb
Units m405_NOx = ppb
Units m405_NO2_zero = ppb
Units m405_NO_zero = ppb
Units m405_cell_T = degC
Units m405_cell_P = mbar
Units m405_overflow_F = cc/min
Units m405_cell_F = cc/min
Units m405_O3_F = cc/min
Units m405_samp_LED_V = volts
Units m405_ref_LED_V = volts
Units m405_NO_gen_V = volts
Units m405_scrubber_T = degC


'================================= TABLES
DataTable(tsdata,True,10000)
  DataInterval(0,SCAN_INTV,Sec,5)
  Sample(1,duration,IEEE4)
  Sample(7,twob_405nm(1),FP2)
  Sample(1,twob_405nm(8),IEEE4)
  Sample(3,twob_405nm(9),FP2)
  Sample(2,twob_405nm(12),IEEE4)
  Sample(2,twob_405nm(14),FP2)
  Sample(1,twob_405nm(22),UINT2)
EndTable

DataTable(stats,run_finished,1000)
  OpenInterval
  Sample(1,duration,FP2)
  Average(1,m405_NO2,FP2,disable_m405)
  StdDev (1,m405_NO2,FP2,disable_m405)
  Average(1,m405_NO,FP2,disable_m405)
  StdDev (1,m405_NO,FP2,disable_m405)
  Average(1,m405_NOx,FP2,disable_m405)
  StdDev (1,m405_NOx,FP2,disable_m405)
  Average(1,m405_NO2_zero,FP2,disable_m405)
  StdDev (1,m405_NO2_zero,FP2,disable_m405)
  Average(1,m405_NO_zero,FP2,disable_m405)
  StdDev (1,m405_NO_zero,FP2,disable_m405)
  Average(2,twob_405nm(6),FP2,disable_m405)
  Average(1,twob_405nm(8),IEEE4,disable_m405)
  Average(3,twob_405nm(9),FP2,disable_m405)
  Average(2,twob_405nm(12),IEEE4,disable_m405)
  Average(2,twob_405nm(14),FP2,disable_m405)
  Sample(1,run_conc_no2,IEEE4)
    FieldNames("ref_NO2_conc")
  Sample(1,run_tolr_no2,IEEE4)
    FieldNames("ref_NO2_tolerance")
  Sample(1,run_conc_no,IEEE4)
    FieldNames("ref_NO_conc")
  Sample(1,run_tolr_no,IEEE4)
    FieldNames("ref_NO_tolerance")
  Sample(1,run_conc_nox,IEEE4)
    FieldNames("ref_NOx_conc")
  Sample(1,run_tolr_nox,IEEE4)
    FieldNames("ref_NOx_tolerance")
  Sample(1,run_cylref,String)
    FieldNames("ref_cylinder")
  Sample(1,run_notes,String)
    FieldNames("notes")
EndTable

'======================= MENU
Const Off = False
Const Recording = True
DisplayMenu("m405 Validation",-2)
  SubMenu("Specify gases")
    MenuItem("NO2 conc, ppb", ref_conc_no2)
    MenuItem("NO2 tolerance, ppb", ref_tolr_no2)
    MenuItem("NO conc, ppb", ref_conc_no)
    MenuItem("NO tolerance, ppb", ref_tolr_no)
    MenuItem("NOx conc, ppb", ref_conc_nox)
    MenuItem("NOx tolerance, ppb", ref_tolr_nox)
    MenuItem("Notes", notes)
  EndSubMenu
  MenuItem("Run mode", run_mode_ON)
    MenuPick(Off, Recording)
  DisplayValue("Status", status)
  DisplayValue("2B NO,  ppb", m405_NO)
  DisplayValue("2B NO2, ppb", m405_NO2)
  DisplayValue("2B NOx, ppb", m405_NOx)
EndMenu


BeginProg
  SerialOpen(TWOB_405_COM,TWOB_405_BAUD,TWOB_405_FMT,0,TWOB_405_BUFF)
  status = "Waiting"

	Scan (SCAN_INTV,sec,0,0)
    SerialIn(twob_record,TWOB_405_COM,100,&h0D,TWOB_405_REC)
    If (Len(twob_record)) Then
      SplitStr(twob_405nm(1),twob_record,"",22,0)
      If (twob_405nm(21) = NAN) Then Move(twob_405nm(1),21,NAN,1)
      SerialFlush(TWOB_405_COM)
    EndIf

    CallTable(tsdata)
    
    If (run_mode_ON) Then
      If (is_running) Then
        'business as usual during a run
        duration = Timer(1,Sec,4) 'read only
        CallTable(stats)
      Else
        'run was just initiated
        run_conc_no2 = IIF(ref_conc_no2 < 0, NAN, ref_conc_no2)
        run_tolr_no2 = IIF(ref_conc_no2 < 0 OR ref_tolr_no2 < 0, NAN, ref_tolr_no2)
        run_conc_no = IIF(ref_conc_no < 0, NAN, ref_conc_no)
        run_tolr_no = IIF(ref_conc_no < 0 OR ref_tolr_no < 0, NAN, ref_tolr_no)
        run_notes = notes
        run_cylref = cylref
        duration = Timer(1,Sec,0) 'reset and start
        is_running = True
        status = "Recording"
      EndIf
    ElseIf (is_running) Then
        'run was just ended
        duration = Timer(1,Sec,1) 'stop
        is_running = False
        run_finished = True
        CallTable(stats)
        run_finished = False
        duration = Timer(1,Sec,3) 'reset
        status = "Waiting"
    EndIf

	NextScan
EndProg

